# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: CI

on:
  workflow_dispatch:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

#    strategy:
#      matrix:
#        node-version: [12.x]
#        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
#    - name: Use Node.js ${{ matrix.node-version }}
#      uses: actions/setup-node@v1
#      with:
#        node-version: ${{ matrix.node-version }}
##    - run: yarn
##    - run: yarn ci
      - name: Build Docker images
        shell: bash
        run: |
  #        echo "tag: ${{ needs.create-tag.outputs.tag }}"
          docker build -t ghcr.io/${{ github.repository_owner }}/ims-data-explorer:1.0.0 .
      - name: Push to GH Packages
        run: |
          docker push ghcr.io/${{ github.repository_owner }}/ims-data-explorer:1.0.0
      
      

#  build:
#    needs:
#      - get-version
#      - create-tag
#      - get-services
#    runs-on: paramount-cloud-ubuntu-arm64-latest
#    strategy:
#      fail-fast: false
#      matrix:
#        service: ${{ fromJSON(needs.get-services.outputs.services) }}
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v4
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v3
#      - name: Log in to GH Packages registry
#        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin
#      - name: Build Docker images
#        shell: bash
#        run: |
#          echo "tag: ${{ needs.create-tag.outputs.tag }}"
#          docker buildx build --provenance=false --load -t ghcr.io/${{ github.repository_owner }}/fms_${{ matrix.service }}:${{ needs.create-tag.outputs.tag }} --build-arg COMMIT_HASH=${{ github.sha }} --build-arg VERSION=${{ needs.get-version.outputs.version }} -f ./deploy/${{ matrix.service }}/Dockerfile .
#      - name: Push to GH Packages
#        run: |
#          docker push ghcr.io/${{ github.repository_owner }}/fms_${{ matrix.service }}:${{ needs.create-tag.outputs.tag }}
